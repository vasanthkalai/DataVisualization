main = "Stacked barchart",
xlab = "Transmission type", ylab = "Frequency",
col = c("darkgrey", "darkblue", "red"),
legend.text = df$ï..Issue,horiz=TRUE,
beside = FALSE)
rownames(df)<-df$ï..Issue
df<-subset(df,select=c(Approve,Disapprove,None))
head(df)
barplot(t(as.matrix(df)),
main = "Stacked barchart",
xlab = "Transmission type", ylab = "Frequency",
col = c("darkgrey", "darkblue", "red"),
legend.text = rownames(df),horiz=TRUE,
beside = FALSE)
barplot(t(as.matrix(df)),
main = "Stacked barchart",
xlab = "Transmission type", ylab = "Frequency",
col = c("darkgrey", "darkblue", "red"),
legend.text = rownames(df),
beside = FALSE)
barplot(t(as.matrix(df)),
main = "Obama Approval Status",
xlab = "Issue type", ylab = "Count",
col = c("darkgrey", "darkblue", "red"),
legend.text = c("Approve","Disapprove","None"),
beside = FALSE)
barplot(t(as.matrix(df)),
main = "Obama Approval Status",
xlab = "Issue type", ylab = "Count",
col = c( "darkblue", "red","darkgrey"),
legend.text = c("Approve","Disapprove","None"),
beside = FALSE)
barplot(t(as.matrix(df)),
main = "Obama Approval Status",
xlab = "Issue type", ylab = "Count",
col = c( "darkblue", "red","darkgrey"),
legend.text = c("Approve","Disapprove","None"),legend(0,0)
beside = FALSE)
barplot(t(as.matrix(df)),
main = "Obama Approval Status",
xlab = "Issue type", ylab = "Count",
col = c( "darkblue", "red","darkgrey"),
legend.text = c("Approve","Disapprove","None"),legend(0,0),
beside = FALSE)
barplot(t(as.matrix(df)),
main = "Obama Approval Status",
xlab = "Issue type", ylab = "Count",
col = c( "darkblue", "red","darkgrey"),legend(1, 95, legend=c("Approve","Disapprove","None"),
col=c("red", "blue"), lty=1:2, cex=0.8,
title="Line types", text.font=4, bg='lightblue'),
beside = FALSE)
barplot(t(as.matrix(df)),
main = "Obama Approval Status",
xlab = "Issue type", ylab = "Count",
col = c( "darkblue", "red","darkgrey"),legend(1, 95, legend=c("Approve","Disapprove","None"),
col=c( "darkblue", "red","darkgrey"), lty=1:2, cex=0.8,
title="Line types", text.font=4, bg='lightblue'),
beside = FALSE)
barplot(t(as.matrix(df)),
main = "Obama Approval Status",
xlab = "Issue type", ylab = "Count",
col = c( "darkblue", "red","darkgrey"),legend(1, 95, legend=c("Approve","Disapprove","None"),
col=c( "darkblue", "red","darkgrey"), lty=1:2, cex=0.8,
title="Line types", text.font=4, bg='lightblue'),
beside = FALSE)
barplot(t(as.matrix(df)),
main = "Obama Approval Status",
xlab = "Issue type", ylab = "Count",
col = c( "darkblue", "red","darkgrey"),
legend.text = c("Approve","Disapprove","None"),legend(1),
beside = FALSE)
barplot(t(as.matrix(df)),
main = "Obama Approval Status",
xlab = "Issue type", ylab = "Count",
col = c( "darkblue", "red","darkgrey"),
legend(1,legend.text = c("Approve","Disapprove","None")),
beside = FALSE)
barplot(t(as.matrix(df)),
main = "Obama Approval Status",
xlab = "Issue type", ylab = "Count",
col = c( "darkblue", "red","darkgrey"),
legend(1,c("Approve","Disapprove","None")),
beside = FALSE)
barplot(t(as.matrix(df)),
main = "Obama Approval Status",
xlab = "Issue type", ylab = "Count",
col = c( "darkblue", "red","darkgrey"),
legend.text = c("Approve","Disapprove","None"),
beside = FALSE)
barplot(t(as.matrix(df)),
main = "Obama Approval Status",
xlab = "Issue type", ylab = "Count",
col = c( "darkblue", "red","darkgrey"),
legend.text = c("Approve","Disapprove","None"),args.legend = list(x = "topright",
inset = c(- 0.15, 0))),
barplot(t(as.matrix(df)),
main = "Obama Approval Status",
xlab = "Issue type", ylab = "Count",
col = c( "darkblue", "red","darkgrey"),
legend.text = c("Approve","Disapprove","None"),args.legend = list(x = "topright",
inset = c(- 0.15, 0)),
beside = FALSE)
par(mar=c(4, 10, 1, 1))
barplot(t(as.matrix(df)),
main = "Obama Approval Status",
xlab = "Issue type", ylab = "Count",
col = c( "darkblue", "red","darkgrey"),
legend.text = c("Approve","Disapprove","None"),args.legend = list(x = "topright",
inset = c(- 0.15, 0)),
beside = FALSE)
par(mar=c(4, 0, 1, 1))
barplot(t(as.matrix(df)),
main = "Obama Approval Status",
xlab = "Issue type", ylab = "Count",
col = c( "darkblue", "red","darkgrey"),
legend.text = c("Approve","Disapprove","None"),args.legend = list(x = "topright",
inset = c(- 0.15, 0)),
beside = FALSE)
par(mar=c(4, 5, 1, 1))
barplot(t(as.matrix(df)),
main = "Obama Approval Status",
xlab = "Issue type", ylab = "Count",
col = c( "darkblue", "red","darkgrey"),
legend.text = c("Approve","Disapprove","None"),args.legend = list(x = "topright",
inset = c(- 0.15, 0)),
beside = FALSE)
par(mar=c(10, 5, 1, 1))
barplot(t(as.matrix(df)),
main = "Obama Approval Status",
xlab = "Issue type", ylab = "Count",
col = c( "darkblue", "red","darkgrey"),
legend.text = c("Approve","Disapprove","None"),args.legend = list(x = "topright",
inset = c(- 0.15, 0)),
beside = FALSE)
par(mar=c(5, 5, 10, 1))
barplot(t(as.matrix(df)),
main = "Obama Approval Status",
xlab = "Issue type", ylab = "Count",
col = c( "darkblue", "red","darkgrey"),
legend.text = c("Approve","Disapprove","None"),args.legend = list(x = "topright",
inset = c(- 0.15, 0)),
beside = FALSE)
par(mar=c(5, 5, 1, 10))
barplot(t(as.matrix(df)),
main = "Obama Approval Status",
xlab = "Issue type", ylab = "Count",
col = c( "darkblue", "red","darkgrey"),
legend.text = c("Approve","Disapprove","None"),args.legend = list(x = "topright",
inset = c(- 0.15, 0)),
beside = FALSE)
par(mar=c(5, 5, 1, 10))
barplot(t(as.matrix(df)),
main = "Obama Approval Status",
xlab = "Issue type", ylab = "Count",
col = c( "darkblue", "red","darkgrey"),
legend.text = c("Approve","Disapprove","None"),args.legend = list(x = "topright",
inset = c(- 1, 0)),
beside = FALSE)
par(mar=c(5, 5, 1, 10))
barplot(t(as.matrix(df)),
main = "Obama Approval Status",
xlab = "Issue type", ylab = "Count",
col = c( "darkblue", "red","darkgrey"),
legend.text = c("Approve","Disapprove","None"),args.legend = list(x = "topright",
inset = c(-0.5, 0)),
beside = FALSE)
par(mar=c(5, 5, 1, 10))
barplot(t(as.matrix(df)),
main = "Obama Approval Status",
xlab = "Issue type", ylab = "Count",
col = c( "darkblue", "red","darkgrey"),
legend.text = c("Approve","Disapprove","None"),args.legend = list(x = "topright",
inset = c(-0.4, 0)),
beside = FALSE)
par(mar=c(5, 5, 1, 10))
barplot(t(as.matrix(df)),
main = "Obama Approval Status",
xlab = "Issue type", ylab = "Count",
col = c( "darkblue", "red","darkgrey"),
legend.text = c("Approve","Disapprove","None"),args.legend = list(x = "topright",
inset = c(-0.3, 0)),
beside = FALSE)
par(mar=c(5, 5, 1, 7))
barplot(t(as.matrix(df)),
main = "Obama Approval Status",
xlab = "Issue type", ylab = "Count",
col = c( "darkblue", "red","darkgrey"),
legend.text = c("Approve","Disapprove","None"),args.legend = list(x = "topright",
inset = c(-0.3, 0)),
beside = FALSE)
par(mar=c(5, 5, 1, 8))
barplot(t(as.matrix(df)),
main = "Obama Approval Status",
xlab = "Issue type", ylab = "Count",
col = c( "darkblue", "red","darkgrey"),
legend.text = c("Approve","Disapprove","None"),args.legend = list(x = "topright",
inset = c(-0.3, 0)),
beside = FALSE)
par(mar=c(5, 5, 1, 8))
barplot(t(as.matrix(df)),
main = "Obama Approval Status",
xlab = "Issue type", ylab = "Count",
col = c( "darkblue", "red","darkgrey"),
legend.text = c("Approve","Disapprove","None"),args.legend = list(x = "topright",
inset = c(-0.3, 0)),
beside = FALSE)
pie(df$Approve,rownames(df),main="Approval Status")
pct<-round(df$Approve/sum(df$Approve)*100)
lbls<-paste(rownames(df$Approve,pct))
lbls <- paste(lbls,"%",sep="")
pie(df$Approve,labels = lbls,col=rainbow(length(lbls)),main="Approval Status")
pct<-round(df$Approve/sum(df$Approve)*100)
#lbls<-paste(rownames(df$Approve,pct))
lbls <- paste(pcts,"%",sep="")
pct<-round(df$Approve/sum(df$Approve)*100)
#lbls<-paste(rownames(df$Approve,pct))
lbls <- paste(pct,"%",sep="")
pie(df$Approve,labels = lbls,col=rainbow(length(lbls)),main="Approval Status")
lbls<-paste(rownames(df$Approve,pct))
print(lbls)
lbls<-paste(rownames(df$Approve,pct))
print(pct)
lbls<-paste(rownames(df$Approve),pct)
print(lbls)
lbls<-paste(rownames(df),pct)
print(lbls)
pct<-round(df$Approve/sum(df$Approve)*100)
lbls<-paste(rownames(df),pct)
lbls <- paste(pct,"%",sep="")
pie(df$Approve,labels = lbls,col=rainbow(length(lbls)),main="Approval Status")
pct<-round(df$Approve/sum(df$Approve)*100)
lbls<-paste(rownames(df),pct)
lbls <- paste(lbls,"%",sep="")
pie(df$Approve,labels = lbls,col=rainbow(length(lbls)),main="Approval Status")
library(ggplot2)
# Create test data.
data <- data.frame(
category=rownames(df),
count=df$Approve
)
# Compute percentages
data$fraction = data$count / sum(data$count)
# Compute the cumulative percentages (top of each rectangle)
data$ymax = cumsum(data$fraction)
# Compute the bottom of each rectangle
data$ymin = c(0, head(data$ymax, n=-1))
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +
geom_rect() +
coord_polar(theta="y") + # Try to remove that to understand how the chart is built initially
xlim(c(2, 4)) # Try to remove that to see how to make a pie chart
library(ggplot2)
# Create test data.
data <- data.frame(
category=rownames(df),
count=df$Approve
)
# Compute percentages
data$fraction = data$count / sum(data$count)
# Compute the cumulative percentages (top of each rectangle)
data$ymax = cumsum(data$fraction)
# Compute the bottom of each rectangle
data$ymin = c(0, head(data$ymax, n=-1))
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +
geom_rect() +
geom_label( x=3.5, aes(y=labelPosition, label=label), size=6) +
scale_fill_brewer(palette=4) +
coord_polar(theta="y") +
xlim(c(2, 4)) +
theme_void() +
theme(legend.position = "none")
library(ggplot2)
# Create test data.
data <- data.frame(
category=rownames(df),
count=df$Approve
)
# Compute percentages
data$fraction = data$count / sum(data$count)
# Compute the cumulative percentages (top of each rectangle)
data$ymax = cumsum(data$fraction)
# Compute the bottom of each rectangle
data$ymin = c(0, head(data$ymax, n=-1))
# Compute label position
data$labelPosition <- (data$ymax + data$ymin) / 2
# Compute a good label
data$label <- paste0(data$category, "\n value: ", data$count)
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +
geom_rect() +
geom_label( x=3.5, aes(y=labelPosition, label=label), size=6) +
scale_fill_brewer(palette=4) +
coord_polar(theta="y") +
xlim(c(2, 4)) +
theme_void() +
theme(legend.position = "none")
library(ggplot2)
# Create test data.
data <- data.frame(
category=rownames(df),
count=df$Approve
)
# Compute percentages
data$fraction = data$count / sum(data$count)
# Compute the cumulative percentages (top of each rectangle)
data$ymax = cumsum(data$fraction)
# Compute the bottom of each rectangle
data$ymin = c(0, head(data$ymax, n=-1))
# Compute label position
data$labelPosition <- (data$ymax + data$ymin) / 2
# Compute a good label
data$label <- paste0(data$category, "\n value: ", data$count)
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +
geom_rect() +
geom_label( x=3.5, aes(y=labelPosition, label=label), size=6) +
scale_fill_brewer(palette=4) +
coord_polar(theta="y") +
xlim(c(2, 4)) +
theme_void() +
library(ggplot2)
# Create test data.
data <- data.frame(
category=rownames(df),
count=df$Approve
)
# Compute percentages
data$fraction = data$count / sum(data$count)
# Compute the cumulative percentages (top of each rectangle)
data$ymax = cumsum(data$fraction)
# Compute the bottom of each rectangle
data$ymin = c(0, head(data$ymax, n=-1))
# Compute label position
data$labelPosition <- (data$ymax + data$ymin) / 2
# Compute a good label
data$label <- paste0(data$category, "\n value: ", data$count)
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +
geom_rect() +
geom_label( x=3.5, aes(y=labelPosition, label=label), size=6) +
scale_fill_brewer(palette=4) +
coord_polar(theta="y") +
xlim(c(2, 4)) +
theme_void()
library(ggplot2)
# Create test data.
data <- data.frame(
category=rownames(df),
count=df$Approve
)
# Compute percentages
data$fraction = data$count / sum(data$count)
# Compute the cumulative percentages (top of each rectangle)
data$ymax = cumsum(data$fraction)
# Compute the bottom of each rectangle
data$ymin = c(0, head(data$ymax, n=-1))
# Compute label position
data$labelPosition <- (data$ymax + data$ymin) / 2
# Compute a good label
data$label <- paste0(data$category, "\n value: ", data$count)
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +
geom_rect() +
geom_label( x=3.5, aes(y=labelPosition, label=label), size=6) +
scale_fill_brewer(palette=4) +
coord_polar(theta="y") +
xlim(c(2, 4))
library(ggplot2)
# Create test data.
data <- data.frame(
category=rownames(df),
count=df$Approve
)
# Compute percentages
data$fraction = data$count / sum(data$count)
# Compute the cumulative percentages (top of each rectangle)
data$ymax = cumsum(data$fraction)
# Compute the bottom of each rectangle
data$ymin = c(0, head(data$ymax, n=-1))
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +
geom_rect() +
geom_label( x=3.5, aes(y=labelPosition, label=label), size=6) +
scale_fill_brewer(palette=4) +
coord_polar(theta="y") +
xlim(c(2, 4)) +
theme_void() +
theme(legend.position = "none")
library(ggplot2)
# Create test data.
data <- data.frame(
category=rownames(df),
count=df$Approve
)
# Compute percentages
data$fraction = data$count / sum(data$count)
# Compute the cumulative percentages (top of each rectangle)
data$ymax = cumsum(data$fraction)
# Compute the bottom of each rectangle
data$ymin = c(0, head(data$ymax, n=-1))
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +
geom_rect() +
geom_label( x=3.5, aes(y=labelPosition, label=label), size=6) +
scale_fill_brewer(palette=4) +
coord_polar(theta="y") +
xlim(c(2, 4)) +
theme_void() +
theme(legend.position = "none")
library(ggplot2)
# Create test data.
data <- data.frame(
category=rownames(df),
count=df$Approve
)
# Compute percentages
data$fraction = data$count / sum(data$count)
# Compute the cumulative percentages (top of each rectangle)
data$ymax = cumsum(data$fraction)
# Compute the bottom of each rectangle
data$ymin = c(0, head(data$ymax, n=-1))
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +
geom_rect() +
coord_polar(theta="y") + # Try to remove that to understand how the chart is built initially
xlim(c(2, 4)) # Try to remove that to see how to make a pie chart
library(ggplot2)
# Create test data.
data <- data.frame(
category=rownames(df),
count=df$Approve
)
# Compute percentages
data$fraction = data$count / sum(data$count)
# Compute the cumulative percentages (top of each rectangle)
data$ymax = cumsum(data$fraction)
# Compute the bottom of each rectangle
data$ymin = c(0, head(data$ymax, n=-1))
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category),main="Approve Status") +
geom_rect() +
coord_polar(theta="y") + # Try to remove that to understand how the chart is built initially
xlim(c(2, 4)) # Try to remove that to see how to make a pie chart
library(ggplot2)
# Create test data.
data <- data.frame(
category=rownames(df),
count=df$Approve
)
# Compute percentages
data$fraction = data$count / sum(data$count)
# Compute the cumulative percentages (top of each rectangle)
data$ymax = cumsum(data$fraction)
# Compute the bottom of each rectangle
data$ymin = c(0, head(data$ymax, n=-1))
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +ggtitle("Plot of length \n by dose")
geom_rect() +
coord_polar(theta="y") + # Try to remove that to understand how the chart is built initially
xlim(c(2, 4)) # Try to remove that to see how to make a pie chart
library(ggplot2)
# Create test data.
data <- data.frame(
category=rownames(df),
count=df$Approve
)
# Compute percentages
data$fraction = data$count / sum(data$count)
# Compute the cumulative percentages (top of each rectangle)
data$ymax = cumsum(data$fraction)
# Compute the bottom of each rectangle
data$ymin = c(0, head(data$ymax, n=-1))
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +ggtitle("Plot of length \n by dose")+
geom_rect() +
coord_polar(theta="y") + # Try to remove that to understand how the chart is built initially
xlim(c(2, 4)) # Try to remove that to see how to make a pie chart
library(ggplot2)
# Create test data.
data <- data.frame(
category=rownames(df),
count=df$Approve
)
# Compute percentages
data$fraction = data$count / sum(data$count)
# Compute the cumulative percentages (top of each rectangle)
data$ymax = cumsum(data$fraction)
# Compute the bottom of each rectangle
data$ymin = c(0, head(data$ymax, n=-1))
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +ggtitle("Approval Status")+
geom_rect() +
coord_polar(theta="y") + # Try to remove that to understand how the chart is built initially
xlim(c(2, 4)) # Try to remove that to see how to make a pie chart
library(ggplot2)
# Create test data.
data <- data.frame(
category=rownames(df),
count=df$Approve
)
# Compute percentages
data$fraction = data$count / sum(data$count)
# Compute the cumulative percentages (top of each rectangle)
data$ymax = cumsum(data$fraction)
# Compute the bottom of each rectangle
data$ymin = c(0, head(data$ymax, n=-1))
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +ggtitle("Approval Status")+
geom_rect() +
coord_polar(theta="y") +
xlim(c(2, 4))
